{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barat\\\\Documents\\\\Projects\\\\React JS\\\\project6\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport letters from './components/pages/letters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [alphabet, setalphabet] = useState(generateAlphabets());\n  function generateAlphabets() {\n    let alphabets = 'abcdefghijklmnopqrstuvwxyz';\n    let resarr = [];\n    for (let i = 1; i <= 26; i++) {\n      resarr.push({\n        value: alphabets[i - 1],\n        isClick: false,\n        index: i\n      });\n    }\n  }\n  console.log(resarr);\n  function update(id) {\n    console.log(id);\n  }\n  const arrEle = resarr.map(arr => {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      children: arr.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this);\n  });\n  return {\n    arrEle\n  };\n}\n_s(App, \"/skXP8an2Wjy+g1awoGr2l9ytNg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["letters","jsxDEV","_jsxDEV","App","_s","alphabet","setalphabet","useState","generateAlphabets","alphabets","resarr","i","push","value","isClick","index","console","log","update","id","arrEle","map","arr","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/barat/Documents/Projects/React JS/project6/src/App.jsx"],"sourcesContent":["import letters from './components/pages/letters'\r\nexport default function App(){\r\n    const [alphabet,setalphabet]=useState(generateAlphabets())\r\n    function generateAlphabets(){\r\n        let alphabets = 'abcdefghijklmnopqrstuvwxyz'\r\n        let resarr=[]\r\n        for(let i=1;i<=26;i++){\r\n            resarr.push({\r\n                value: alphabets[i-1],\r\n                isClick:false,\r\n                index: i\r\n            })\r\n        }\r\n    }\r\n    console.log(resarr)\r\n    function update(id){\r\n        console.log(id)\r\n    }\r\n    const arrEle=resarr.map(arr=>{\r\n        <div>{arr.value}</div>\r\n    })\r\n    return(\r\n        {arrEle} \r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAChD,eAAe,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACC,QAAQ,CAACC,iBAAiB,CAAC,CAAC,CAAC;EAC1D,SAASA,iBAAiBA,CAAA,EAAE;IACxB,IAAIC,SAAS,GAAG,4BAA4B;IAC5C,IAAIC,MAAM,GAAC,EAAE;IACb,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,IAAE,EAAE,EAACA,CAAC,EAAE,EAAC;MAClBD,MAAM,CAACE,IAAI,CAAC;QACRC,KAAK,EAAEJ,SAAS,CAACE,CAAC,GAAC,CAAC,CAAC;QACrBG,OAAO,EAAC,KAAK;QACbC,KAAK,EAAEJ;MACX,CAAC,CAAC;IACN;EACJ;EACAK,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;EACnB,SAASQ,MAAMA,CAACC,EAAE,EAAC;IACfH,OAAO,CAACC,GAAG,CAACE,EAAE,CAAC;EACnB;EACA,MAAMC,MAAM,GAACV,MAAM,CAACW,GAAG,CAACC,GAAG,IAAE;IACzB,aAAApB,OAAA;MAAAqB,QAAA,EAAMD,GAAG,CAACT;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC1B,CAAC,CAAC;EACF,OACI;IAACP;EAAM,CAAC;AAEhB;AAAChB,EAAA,CAvBuBD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}