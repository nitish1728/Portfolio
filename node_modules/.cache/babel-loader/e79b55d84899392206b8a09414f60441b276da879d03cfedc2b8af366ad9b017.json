{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barat\\\\Documents\\\\Projects\\\\React JS\\\\project6\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport Letters from './components/pages/letters';\nimport Display from './components/pages/display';\nimport './components/css/App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [alphabet, setalphabet] = useState(() => generateAlphabets());\n  const [guessed, setGuessed] = useState(\"react\");\n  function generateAlphabets() {\n    let alphabets = 'abcdefghijklmnopqrstuvwxyz';\n    let resarr = [];\n    for (let i = 1; i <= 26; i++) {\n      resarr.push({\n        value: alphabets[i - 1].toUpperCase(),\n        isClick: false,\n        isCorrect: true,\n        index: i\n      });\n    }\n    return resarr;\n  }\n  // function update(id){\n  //     setalphabet(alphabet=>alphabet.map(one=>{\n  //         return one.index===id && !one.isClick?{...one,isClick:!one.isClick}:one\n  //     }))\n  // }\n\n  function update(id) {\n    setalphabet(alphabet => alphabet.map(each => {\n      if (each.index === id && !each.isClick) {\n        if (guessed.includes(each.value)) {\n          return {\n            ...each,\n            isClick: !each.isClick,\n            isCorrect: each.isCorrect\n          };\n        } else {\n          return;\n        }\n      }\n    }));\n  }\n  const arrElements = alphabet.map(each => {\n    return /*#__PURE__*/_jsxDEV(Letters, {\n      value: each.value,\n      isClick: each.isClick,\n      isCorrect: each.isCorrect,\n      update: () => update(each.index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  });\n  const displayElements = guessed.split('').map(ar => {\n    return /*#__PURE__*/_jsxDEV(Display, {\n      value: ar.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Assembly Endgame\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Guess the Word under 8 attempts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"display\",\n          children: displayElements\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main\",\n          children: arrElements\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"MumffXVfAXqrxCZgX8myuqmgdD0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Letters","Display","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","alphabet","setalphabet","generateAlphabets","guessed","setGuessed","alphabets","resarr","i","push","value","toUpperCase","isClick","isCorrect","index","update","id","map","each","includes","arrElements","fileName","_jsxFileName","lineNumber","columnNumber","displayElements","split","ar","children","className","_c","$RefreshReg$"],"sources":["C:/Users/barat/Documents/Projects/React JS/project6/src/App.jsx"],"sourcesContent":["import Letters from './components/pages/letters'\r\nimport Display from './components/pages/display'\r\nimport './components/css/App.css'\r\nimport {useState} from 'react'\r\nexport default function App(){\r\n    const [alphabet,setalphabet]=useState(()=>generateAlphabets())\r\n    const [guessed,setGuessed]=useState(\"react\")\r\n    function generateAlphabets(){\r\n        let alphabets = 'abcdefghijklmnopqrstuvwxyz'\r\n        let resarr=[]\r\n        for(let i=1;i<=26;i++){\r\n            resarr.push({\r\n                value: alphabets[i-1].toUpperCase(),\r\n                isClick: false,\r\n                isCorrect: true,\r\n                index: i\r\n            })\r\n        }\r\n        return resarr\r\n    }\r\n    // function update(id){\r\n    //     setalphabet(alphabet=>alphabet.map(one=>{\r\n    //         return one.index===id && !one.isClick?{...one,isClick:!one.isClick}:one\r\n    //     }))\r\n    // }\r\n\r\n    function update(id){\r\n        setalphabet(alphabet=>alphabet.map(each=>{\r\n            if(each.index===id && !each.isClick){\r\n                if(guessed.includes(each.value)){\r\n                    return {...each,isClick:!each.isClick,isCorrect:each.isCorrect}\r\n                }\r\n                else{\r\n                    return \r\n                }\r\n            }\r\n        }))\r\n    }\r\n    const arrElements= alphabet.map(each=>{\r\n        return <Letters value={each.value} isClick={each.isClick} isCorrect={each.isCorrect} update={()=>update(each.index)}/>\r\n    })\r\n    const displayElements= guessed.split('').map(ar=>{\r\n        return <Display value={ar.toUpperCase()} />\r\n    })\r\n    return(\r\n        <>\r\n            <div className=\"section\">\r\n                <div className=\"book\">\r\n                    <div className=\"description\">\r\n                        <h1>Assembly Endgame</h1>\r\n                        <h3>Guess the Word under 8 attempts</h3>\r\n                    </div>\r\n                    <div className=\"display\">\r\n                        {displayElements}\r\n                    </div>\r\n                    <div className=\"main\">\r\n                        {arrElements}\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}