{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barat\\\\Documents\\\\Projects\\\\React JS\\\\project3\\\\src\\\\App.jsx\";\nimport Jokesdata from './javascript/App.js';\nimport Joke from './components/Joke.jsx';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  const eachJoke = Jokesdata.map(joke => {\n    return /*#__PURE__*/_jsxDEV(Joke, {\n      Setup: Jokesdata.Setup,\n      Punchline: Jokesdata.Punchline\n    }, joke.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: eachJoke\n  }, void 0, false);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Jokesdata","Joke","jsxDEV","_jsxDEV","Fragment","_Fragment","App","eachJoke","map","joke","Setup","Punchline","id","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/barat/Documents/Projects/React JS/project3/src/App.jsx"],"sourcesContent":["import Jokesdata from './javascript/App.js'\r\nimport Joke from './components/Joke.jsx'\r\nexport default function App(){\r\n    const eachJoke=Jokesdata.map((joke)=>{\r\n        return(\r\n            <Joke\r\n                key={joke.id}\r\n                Setup={Jokesdata.Setup}\r\n                Punchline={Jokesdata.Punchline}\r\n            />\r\n        )\r\n    })\r\n    return(\r\n        <>\r\n            {eachJoke}\r\n        </>  \r\n    )\r\n}"],"mappings":";AAAA,OAAOA,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,IAAI,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACxC,eAAe,SAASC,GAAGA,CAAA,EAAE;EACzB,MAAMC,QAAQ,GAACP,SAAS,CAACQ,GAAG,CAAEC,IAAI,IAAG;IACjC,oBACIN,OAAA,CAACF,IAAI;MAEDS,KAAK,EAAEV,SAAS,CAACU,KAAM;MACvBC,SAAS,EAAEX,SAAS,CAACW;IAAU,GAF1BF,IAAI,CAACG,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGf,CAAC;EAEV,CAAC,CAAC;EACF,oBACIb,OAAA,CAAAE,SAAA;IAAAY,QAAA,EACKV;EAAQ,gBACX,CAAC;AAEX;AAACW,EAAA,GAfuBZ,GAAG;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}