{"ast":null,"code":"import{HfInference}from'@huggingface/inference';const SYSTEM_PROMPT=\"\\nYou are an assistant that receives a list of ingredients that a user \\nmake with some or all of those ingredients. You don't need to use every ingredient they mention\\nin your receipe. The receipe can inculde additional ingredients they didn't mention, nbut try not to include too many\\nextra ingredients.Format your response in markdown to make it easier to render  to a web page.\";const hf=new HfInference(process.env.REACT_APP_API_KEY);export async function generateReceipe(ingredientsArr){const ingredientsStr=ingredientsArr.join(\", \");try{const response=await hf.chatCompletion({model:\"mistralai/Mixtral-8x7B-Instruct-v0.1\",messages:[{role:\"system\",content:SYSTEM_PROMPT},{role:\"user\",content:\"I have \".concat(ingredientsStr,\".Please give me a receipe \\n                you would recommend I make\")}],max_tokens:1024});return response.choices[0].message.content;}catch(e){console.error(e);}}","map":{"version":3,"names":["HfInference","SYSTEM_PROMPT","hf","process","env","REACT_APP_API_KEY","generateReceipe","ingredientsArr","ingredientsStr","join","response","chatCompletion","model","messages","role","content","concat","max_tokens","choices","message","e","console","error"],"sources":["C:/Users/barat/Documents/Projects/React JS/project4/src/components/javascript/main.js"],"sourcesContent":["import { HfInference } from '@huggingface/inference'\r\n\r\n\r\nconst SYSTEM_PROMPT=`\r\nYou are an assistant that receives a list of ingredients that a user \r\nmake with some or all of those ingredients. You don't need to use every ingredient they mention\r\nin your receipe. The receipe can inculde additional ingredients they didn't mention, nbut try not to include too many\r\nextra ingredients.Format your response in markdown to make it easier to render  to a web page.`\r\nconst hf= new HfInference(process.env.REACT_APP_API_KEY)\r\n\r\nexport async function generateReceipe(ingredientsArr){\r\n    const ingredientsStr=ingredientsArr.join(\", \")\r\n    try{\r\n        const response=await hf.chatCompletion({\r\n            model:\"mistralai/Mixtral-8x7B-Instruct-v0.1\",\r\n            messages:[\r\n                {role:\"system\",content:SYSTEM_PROMPT},\r\n                {role:\"user\",content:`I have ${ingredientsStr}.Please give me a receipe \r\n                you would recommend I make`}    \r\n            ],\r\n            max_tokens:1024\r\n        })\r\n        return response.choices[0].message.content\r\n    }\r\n    catch(e){\r\n        console.error(e)\r\n    }\r\n}"],"mappings":"AAAA,OAASA,WAAW,KAAQ,wBAAwB,CAGpD,KAAM,CAAAC,aAAa,kYAI4E,CAC/F,KAAM,CAAAC,EAAE,CAAE,GAAI,CAAAF,WAAW,CAACG,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC,CAExD,MAAO,eAAe,CAAAC,eAAeA,CAACC,cAAc,CAAC,CACjD,KAAM,CAAAC,cAAc,CAACD,cAAc,CAACE,IAAI,CAAC,IAAI,CAAC,CAC9C,GAAG,CACC,KAAM,CAAAC,QAAQ,CAAC,KAAM,CAAAR,EAAE,CAACS,cAAc,CAAC,CACnCC,KAAK,CAAC,sCAAsC,CAC5CC,QAAQ,CAAC,CACL,CAACC,IAAI,CAAC,QAAQ,CAACC,OAAO,CAACd,aAAa,CAAC,CACrC,CAACa,IAAI,CAAC,MAAM,CAACC,OAAO,WAAAC,MAAA,CAAWR,cAAc,0EAClB,CAAC,CAC/B,CACDS,UAAU,CAAC,IACf,CAAC,CAAC,CACF,MAAO,CAAAP,QAAQ,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACJ,OAAO,CAC9C,CACA,MAAMK,CAAC,CAAC,CACJC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC,CACpB,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}