{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barat\\\\Documents\\\\Projects\\\\React JS\\\\project6\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport Letters from './components/pages/letters';\nimport Display from './components/pages/display';\nimport Confetti from 'react-confetti';\nimport './components/css/App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const guessed = \"bahubali\";\n  const [alphabet, setalphabet] = useState(() => generateAlphabets());\n  const [available, setavailable] = useState([]);\n  const [count, setCount] = useState(1);\n  const GameWon = guessed.split(\"\").every(letter => available.includes(letter.toUpperCase()));\n  const Gamelost = count > 8;\n  const GameOver = GameWon || Gamelost;\n  console.log(GameWon);\n  function generateAlphabets() {\n    let alphabets = 'abcdefghijklmnopqrstuvwxyz';\n    let resarr = [];\n    for (let i = 1; i <= 26; i++) {\n      resarr.push({\n        value: alphabets[i - 1].toUpperCase(),\n        isClick: false,\n        isCorrect: true,\n        index: i\n      });\n    }\n    return resarr;\n  }\n  // function update(id){\n  //     setalphabet(alphabet=>alphabet.map(one=>{\n  //         return one.index===id && !one.isClick?{...one,isClick:!one.isClick}:one\n  //     }))\n  // }\n\n  function update(id) {\n    setalphabet(alphabet => alphabet.map(each => {\n      if (each.index === id && !each.isClick) {\n        if (guessed.toUpperCase().includes(each.value)) {\n          updateDisplay(each.value);\n          return {\n            ...each,\n            isClick: !each.isClick,\n            isCorrect: each.isCorrect\n          };\n        } else {\n          setCount(count + 1);\n          console.log(count);\n          return {\n            ...each,\n            isClick: !each.isClick,\n            isCorrect: !each.isCorrect\n          };\n        }\n      } else {\n        return each;\n      }\n    }));\n  }\n  function updateDisplay(character) {\n    setavailable(available => [...available, character]);\n  }\n  const arrElements = alphabet.map(each => {\n    return /*#__PURE__*/_jsxDEV(Letters, {\n      gameover: GameOver,\n      value: each.value,\n      isClick: each.isClick,\n      isCorrect: each.isCorrect,\n      update: () => update(each.index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  });\n  const displayElements = guessed.split('').map(ar => {\n    return /*#__PURE__*/_jsxDEV(Display, {\n      value: available.includes(ar.toUpperCase()) ? ar.toUpperCase() : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [GameOver && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Assembly Endgame\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Guess the Word under 8 attempts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"display\",\n          children: displayElements\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main\",\n          children: arrElements\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), GameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gameover\",\n          nc: true,\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"NhiwbTOolX2FDiEwkLOc1db9MCk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Letters","Display","Confetti","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","guessed","alphabet","setalphabet","generateAlphabets","available","setavailable","count","setCount","GameWon","split","every","letter","includes","toUpperCase","Gamelost","GameOver","console","log","alphabets","resarr","i","push","value","isClick","isCorrect","index","update","id","map","each","updateDisplay","character","arrElements","gameover","fileName","_jsxFileName","lineNumber","columnNumber","displayElements","ar","children","className","nc","_c","$RefreshReg$"],"sources":["C:/Users/barat/Documents/Projects/React JS/project6/src/App.jsx"],"sourcesContent":["import Letters from './components/pages/letters'\r\nimport Display from './components/pages/display'\r\nimport Confetti from 'react-confetti'\r\nimport './components/css/App.css'\r\nimport {useState} from 'react'\r\nexport default function App(){\r\n    const guessed=\"bahubali\"\r\n    const [alphabet,setalphabet]=useState(()=>generateAlphabets())\r\n    const [available,setavailable]=useState([])\r\n    const [count,setCount]=useState(1)\r\n    const GameWon=guessed.split(\"\").every(letter=>available.includes(letter.toUpperCase()))\r\n    const Gamelost= count>8\r\n    const GameOver=GameWon || Gamelost\r\n    console.log(GameWon)\r\n    function generateAlphabets(){\r\n        let alphabets = 'abcdefghijklmnopqrstuvwxyz'\r\n        let resarr=[]\r\n        for(let i=1;i<=26;i++){\r\n            resarr.push({\r\n                value: alphabets[i-1].toUpperCase(),\r\n                isClick: false,\r\n                isCorrect: true,\r\n                index: i\r\n            })\r\n        }\r\n        return resarr\r\n    }\r\n    // function update(id){\r\n    //     setalphabet(alphabet=>alphabet.map(one=>{\r\n    //         return one.index===id && !one.isClick?{...one,isClick:!one.isClick}:one\r\n    //     }))\r\n    // }\r\n\r\n    function update(id){\r\n        setalphabet(alphabet=>alphabet.map(each=>{\r\n            if(each.index===id && !each.isClick){\r\n                if(guessed.toUpperCase().includes(each.value)){\r\n                    updateDisplay(each.value)\r\n                    return {...each,isClick:!each.isClick,isCorrect:each.isCorrect}\r\n                }\r\n                else{\r\n                    setCount(count+1)\r\n                    console.log(count)\r\n                    return {...each,isClick:!each.isClick,isCorrect:!each.isCorrect}\r\n                }\r\n            }\r\n            else{\r\n                return each\r\n            }\r\n        }))\r\n    }\r\n\r\n    function updateDisplay(character){\r\n        setavailable(available=>[...available,character])\r\n    }\r\n    const arrElements= alphabet.map(each=>{\r\n        return <Letters gameover={GameOver} value={each.value} isClick={each.isClick} isCorrect={each.isCorrect} update={()=>update(each.index)}/>\r\n    })\r\n    const displayElements= guessed.split('').map(ar=>{  \r\n        return <Display value={available.includes(ar.toUpperCase())?ar.toUpperCase():\"\"} />\r\n    })\r\n    return(\r\n        <>\r\n            {GameOver && <Confetti />}\r\n            <div className=\"section\">\r\n                <div className=\"book\">\r\n                    <div className=\"description\">\r\n                        <h1>Assembly Endgame</h1>\r\n                        <h3>Guess the Word under 8 attempts</h3>\r\n                    </div>\r\n                    <div className=\"display\">\r\n                        {displayElements}\r\n                    </div>\r\n                    <div className=\"main\">\r\n                        {arrElements}\r\n                    </div>\r\n                    {GameOver && <button className='gameover' nc>New Game</button>}\r\n                </div>\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,4BAA4B;AAChD,OAAOC,OAAO,MAAM,4BAA4B;AAChD,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,0BAA0B;AACjC,SAAQC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC9B,eAAe,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACzB,MAAMC,OAAO,GAAC,UAAU;EACxB,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACT,QAAQ,CAAC,MAAIU,iBAAiB,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAACZ,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACa,KAAK,EAACC,QAAQ,CAAC,GAACd,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAMe,OAAO,GAACR,OAAO,CAACS,KAAK,CAAC,EAAE,CAAC,CAACC,KAAK,CAACC,MAAM,IAAEP,SAAS,CAACQ,QAAQ,CAACD,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC;EACvF,MAAMC,QAAQ,GAAER,KAAK,GAAC,CAAC;EACvB,MAAMS,QAAQ,GAACP,OAAO,IAAIM,QAAQ;EAClCE,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;EACpB,SAASL,iBAAiBA,CAAA,EAAE;IACxB,IAAIe,SAAS,GAAG,4BAA4B;IAC5C,IAAIC,MAAM,GAAC,EAAE;IACb,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,IAAE,EAAE,EAACA,CAAC,EAAE,EAAC;MAClBD,MAAM,CAACE,IAAI,CAAC;QACRC,KAAK,EAAEJ,SAAS,CAACE,CAAC,GAAC,CAAC,CAAC,CAACP,WAAW,CAAC,CAAC;QACnCU,OAAO,EAAE,KAAK;QACdC,SAAS,EAAE,IAAI;QACfC,KAAK,EAAEL;MACX,CAAC,CAAC;IACN;IACA,OAAOD,MAAM;EACjB;EACA;EACA;EACA;EACA;EACA;;EAEA,SAASO,MAAMA,CAACC,EAAE,EAAC;IACfzB,WAAW,CAACD,QAAQ,IAAEA,QAAQ,CAAC2B,GAAG,CAACC,IAAI,IAAE;MACrC,IAAGA,IAAI,CAACJ,KAAK,KAAGE,EAAE,IAAI,CAACE,IAAI,CAACN,OAAO,EAAC;QAChC,IAAGvB,OAAO,CAACa,WAAW,CAAC,CAAC,CAACD,QAAQ,CAACiB,IAAI,CAACP,KAAK,CAAC,EAAC;UAC1CQ,aAAa,CAACD,IAAI,CAACP,KAAK,CAAC;UACzB,OAAO;YAAC,GAAGO,IAAI;YAACN,OAAO,EAAC,CAACM,IAAI,CAACN,OAAO;YAACC,SAAS,EAACK,IAAI,CAACL;UAAS,CAAC;QACnE,CAAC,MACG;UACAjB,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;UACjBU,OAAO,CAACC,GAAG,CAACX,KAAK,CAAC;UAClB,OAAO;YAAC,GAAGuB,IAAI;YAACN,OAAO,EAAC,CAACM,IAAI,CAACN,OAAO;YAACC,SAAS,EAAC,CAACK,IAAI,CAACL;UAAS,CAAC;QACpE;MACJ,CAAC,MACG;QACA,OAAOK,IAAI;MACf;IACJ,CAAC,CAAC,CAAC;EACP;EAEA,SAASC,aAAaA,CAACC,SAAS,EAAC;IAC7B1B,YAAY,CAACD,SAAS,IAAE,CAAC,GAAGA,SAAS,EAAC2B,SAAS,CAAC,CAAC;EACrD;EACA,MAAMC,WAAW,GAAE/B,QAAQ,CAAC2B,GAAG,CAACC,IAAI,IAAE;IAClC,oBAAOlC,OAAA,CAACL,OAAO;MAAC2C,QAAQ,EAAElB,QAAS;MAACO,KAAK,EAAEO,IAAI,CAACP,KAAM;MAACC,OAAO,EAAEM,IAAI,CAACN,OAAQ;MAACC,SAAS,EAAEK,IAAI,CAACL,SAAU;MAACE,MAAM,EAAEA,CAAA,KAAIA,MAAM,CAACG,IAAI,CAACJ,KAAK;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAC9I,CAAC,CAAC;EACF,MAAMC,eAAe,GAAEtC,OAAO,CAACS,KAAK,CAAC,EAAE,CAAC,CAACmB,GAAG,CAACW,EAAE,IAAE;IAC7C,oBAAO5C,OAAA,CAACJ,OAAO;MAAC+B,KAAK,EAAElB,SAAS,CAACQ,QAAQ,CAAC2B,EAAE,CAAC1B,WAAW,CAAC,CAAC,CAAC,GAAC0B,EAAE,CAAC1B,WAAW,CAAC,CAAC,GAAC;IAAG;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACvF,CAAC,CAAC;EACF,oBACI1C,OAAA,CAAAE,SAAA;IAAA2C,QAAA,GACKzB,QAAQ,iBAAIpB,OAAA,CAACH,QAAQ;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzB1C,OAAA;MAAK8C,SAAS,EAAC,SAAS;MAAAD,QAAA,eACpB7C,OAAA;QAAK8C,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACjB7C,OAAA;UAAK8C,SAAS,EAAC,aAAa;UAAAD,QAAA,gBACxB7C,OAAA;YAAA6C,QAAA,EAAI;UAAgB;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzB1C,OAAA;YAAA6C,QAAA,EAAI;UAA+B;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACN1C,OAAA;UAAK8C,SAAS,EAAC,SAAS;UAAAD,QAAA,EACnBF;QAAe;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eACN1C,OAAA;UAAK8C,SAAS,EAAC,MAAM;UAAAD,QAAA,EAChBR;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,EACLtB,QAAQ,iBAAIpB,OAAA;UAAQ8C,SAAS,EAAC,UAAU;UAACC,EAAE;UAAAF,QAAA,EAAC;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC;EAAA,eACR,CAAC;AAEX;AAACtC,EAAA,CA7EuBD,GAAG;AAAA6C,EAAA,GAAH7C,GAAG;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}